[
  {
    "name": "flutter_best_practices_lints",
    "qualifiedName": "flutter_best_practices_lints",
    "href": "flutter_best_practices_lints",
    "kind": 9,
    "packageRank": 0,
    "desc": "flutter_best_practices_lints"
  },
  {
    "name": "ClassDeclarationExtension",
    "qualifiedName": "flutter_best_practices_lints.ClassDeclarationExtension",
    "href": "flutter_best_practices_lints/ClassDeclarationExtension.html",
    "kind": 6,
    "packageRank": 0,
    "desc": "Provides convenient inspection utilities on a ClassDeclaration\nto help custom lint rules determine class characteristics in Flutter code.\nUtility getters include checks for private Flutter State classes,\nabstract declarations, interface implementations, superclass extensions,\ngeneric type usage, and overall relationships to other classes.",
    "enclosedBy": {
      "name": "flutter_best_practices_lints",
      "kind": 9,
      "href": "flutter_best_practices_lints"
    }
  },
  {
    "name": "extendsClass",
    "qualifiedName": "flutter_best_practices_lints.ClassDeclarationExtension.extendsClass",
    "href": "flutter_best_practices_lints/ClassDeclarationExtension/extendsClass.html",
    "kind": 10,
    "overriddenDepth": 0,
    "packageRank": 0,
    "desc": "Checks if this class directly extends a base class named baseClassName.",
    "enclosedBy": {
      "name": "ClassDeclarationExtension",
      "kind": 6,
      "href": "flutter_best_practices_lints/ClassDeclarationExtension.html"
    }
  },
  {
    "name": "implementsInterface",
    "qualifiedName": "flutter_best_practices_lints.ClassDeclarationExtension.implementsInterface",
    "href": "flutter_best_practices_lints/ClassDeclarationExtension/implementsInterface.html",
    "kind": 10,
    "overriddenDepth": 0,
    "packageRank": 0,
    "desc": "Checks if this class implements the interface named interfaceName.\nReturns true if an implements clause lists the given interface.",
    "enclosedBy": {
      "name": "ClassDeclarationExtension",
      "kind": 6,
      "href": "flutter_best_practices_lints/ClassDeclarationExtension.html"
    }
  },
  {
    "name": "isAbstract",
    "qualifiedName": "flutter_best_practices_lints.ClassDeclarationExtension.isAbstract",
    "href": "flutter_best_practices_lints/ClassDeclarationExtension/isAbstract.html",
    "kind": 16,
    "overriddenDepth": 0,
    "packageRank": 0,
    "desc": "Returns true if this class is declared as abstract.",
    "enclosedBy": {
      "name": "ClassDeclarationExtension",
      "kind": 6,
      "href": "flutter_best_practices_lints/ClassDeclarationExtension.html"
    }
  },
  {
    "name": "isRelatedTo",
    "qualifiedName": "flutter_best_practices_lints.ClassDeclarationExtension.isRelatedTo",
    "href": "flutter_best_practices_lints/ClassDeclarationExtension/isRelatedTo.html",
    "kind": 10,
    "overriddenDepth": 0,
    "packageRank": 0,
    "desc": "Returns true if this class is related to className by either\nimplementing it, extending it, or using it as a generic type.",
    "enclosedBy": {
      "name": "ClassDeclarationExtension",
      "kind": 6,
      "href": "flutter_best_practices_lints/ClassDeclarationExtension.html"
    }
  },
  {
    "name": "isStateClass",
    "qualifiedName": "flutter_best_practices_lints.ClassDeclarationExtension.isStateClass",
    "href": "flutter_best_practices_lints/ClassDeclarationExtension/isStateClass.html",
    "kind": 16,
    "overriddenDepth": 0,
    "packageRank": 0,
    "desc": "Provides convenient inspection utilities on a ClassDeclaration\nto help custom lint rules determine class characteristics in Flutter code.\nUtility getters include checks for private Flutter State classes,\nabstract declarations, interface implementations, superclass extensions,\ngeneric type usage, and overall relationships to other classes.",
    "enclosedBy": {
      "name": "ClassDeclarationExtension",
      "kind": 6,
      "href": "flutter_best_practices_lints/ClassDeclarationExtension.html"
    }
  },
  {
    "name": "usesGeneric",
    "qualifiedName": "flutter_best_practices_lints.ClassDeclarationExtension.usesGeneric",
    "href": "flutter_best_practices_lints/ClassDeclarationExtension/usesGeneric.html",
    "kind": 10,
    "overriddenDepth": 0,
    "packageRank": 0,
    "desc": "Determines if baseClassName appears as a generic type argument\nin either the extends or implements clauses of this class.",
    "enclosedBy": {
      "name": "ClassDeclarationExtension",
      "kind": 6,
      "href": "flutter_best_practices_lints/ClassDeclarationExtension.html"
    }
  },
  {
    "name": "FlutterBestPracticesPlugin",
    "qualifiedName": "flutter_best_practices_lints.FlutterBestPracticesPlugin",
    "href": "flutter_best_practices_lints/FlutterBestPracticesPlugin-class.html",
    "kind": 3,
    "packageRank": 0,
    "desc": "A plugin class is used to list all the assists/lints defined by a plugin.",
    "enclosedBy": {
      "name": "flutter_best_practices_lints",
      "kind": 9,
      "href": "flutter_best_practices_lints"
    }
  },
  {
    "name": "FlutterBestPracticesPlugin",
    "qualifiedName": "flutter_best_practices_lints.FlutterBestPracticesPlugin.FlutterBestPracticesPlugin",
    "href": "flutter_best_practices_lints/FlutterBestPracticesPlugin/FlutterBestPracticesPlugin.html",
    "kind": 2,
    "packageRank": 0,
    "desc": "",
    "enclosedBy": {
      "name": "FlutterBestPracticesPlugin",
      "kind": 3,
      "href": "flutter_best_practices_lints/FlutterBestPracticesPlugin-class.html"
    }
  },
  {
    "name": "getLintRules",
    "qualifiedName": "flutter_best_practices_lints.FlutterBestPracticesPlugin.getLintRules",
    "href": "flutter_best_practices_lints/FlutterBestPracticesPlugin/getLintRules.html",
    "kind": 10,
    "overriddenDepth": 1,
    "packageRank": 0,
    "desc": "We list all the custom warnings/infos/errors",
    "enclosedBy": {
      "name": "FlutterBestPracticesPlugin",
      "kind": 3,
      "href": "flutter_best_practices_lints/FlutterBestPracticesPlugin-class.html"
    }
  },
  {
    "name": "LintCodeCopyWithExtension",
    "qualifiedName": "flutter_best_practices_lints.LintCodeCopyWithExtension",
    "href": "flutter_best_practices_lints/LintCodeCopyWithExtension.html",
    "kind": 6,
    "packageRank": 0,
    "desc": "An extension that provides a method for creating modified copies of a\nLintCode.",
    "enclosedBy": {
      "name": "flutter_best_practices_lints",
      "kind": 9,
      "href": "flutter_best_practices_lints"
    }
  },
  {
    "name": "copyWith",
    "qualifiedName": "flutter_best_practices_lints.LintCodeCopyWithExtension.copyWith",
    "href": "flutter_best_practices_lints/LintCodeCopyWithExtension/copyWith.html",
    "kind": 10,
    "overriddenDepth": 0,
    "packageRank": 0,
    "desc": "An extension that provides a method for creating modified copies of a\nLintCode.",
    "enclosedBy": {
      "name": "LintCodeCopyWithExtension",
      "kind": 6,
      "href": "flutter_best_practices_lints/LintCodeCopyWithExtension.html"
    }
  },
  {
    "name": "MatchingClassAndFileName",
    "qualifiedName": "flutter_best_practices_lints.MatchingClassAndFileName",
    "href": "flutter_best_practices_lints/MatchingClassAndFileName-class.html",
    "kind": 3,
    "packageRank": 0,
    "desc": "Ensures that public class names in PascalCase correspond to their\nsnake_case file names, helping maintain consistency between files\nand the primary class they contain.",
    "enclosedBy": {
      "name": "flutter_best_practices_lints",
      "kind": 9,
      "href": "flutter_best_practices_lints"
    }
  },
  {
    "name": "MatchingClassAndFileName",
    "qualifiedName": "flutter_best_practices_lints.MatchingClassAndFileName.MatchingClassAndFileName",
    "href": "flutter_best_practices_lints/MatchingClassAndFileName/MatchingClassAndFileName.html",
    "kind": 2,
    "packageRank": 0,
    "desc": "Ensures that public class names in PascalCase correspond to their\nsnake_case file names, helping maintain consistency between files\nand the primary class they contain.",
    "enclosedBy": {
      "name": "MatchingClassAndFileName",
      "kind": 3,
      "href": "flutter_best_practices_lints/MatchingClassAndFileName-class.html"
    }
  },
  {
    "name": "run",
    "qualifiedName": "flutter_best_practices_lints.MatchingClassAndFileName.run",
    "href": "flutter_best_practices_lints/MatchingClassAndFileName/run.html",
    "kind": 10,
    "overriddenDepth": 1,
    "packageRank": 0,
    "desc": "Ensures that public class names in PascalCase correspond to their\nsnake_case file names, helping maintain consistency between files\nand the primary class they contain.",
    "enclosedBy": {
      "name": "MatchingClassAndFileName",
      "kind": 3,
      "href": "flutter_best_practices_lints/MatchingClassAndFileName-class.html"
    }
  },
  {
    "name": "SingleClassPerFile",
    "qualifiedName": "flutter_best_practices_lints.SingleClassPerFile",
    "href": "flutter_best_practices_lints/SingleClassPerFile-class.html",
    "kind": 3,
    "packageRank": 0,
    "desc": "Validates that each Dart file declares only one public class,\nexcept when exactly two public classes exist and one is abstract\nwhile the other extends or implements it (common for interface+impl),\nor when a StatefulWidget and its private State coexist.",
    "enclosedBy": {
      "name": "flutter_best_practices_lints",
      "kind": 9,
      "href": "flutter_best_practices_lints"
    }
  },
  {
    "name": "SingleClassPerFile",
    "qualifiedName": "flutter_best_practices_lints.SingleClassPerFile.SingleClassPerFile",
    "href": "flutter_best_practices_lints/SingleClassPerFile/SingleClassPerFile.html",
    "kind": 2,
    "packageRank": 0,
    "desc": "Validates that each Dart file declares only one public class,\nexcept when exactly two public classes exist and one is abstract\nwhile the other extends or implements it (common for interface+impl),\nor when a StatefulWidget and its private State coexist.",
    "enclosedBy": {
      "name": "SingleClassPerFile",
      "kind": 3,
      "href": "flutter_best_practices_lints/SingleClassPerFile-class.html"
    }
  },
  {
    "name": "run",
    "qualifiedName": "flutter_best_practices_lints.SingleClassPerFile.run",
    "href": "flutter_best_practices_lints/SingleClassPerFile/run.html",
    "kind": 10,
    "overriddenDepth": 1,
    "packageRank": 0,
    "desc": "Emits lints for a given file.",
    "enclosedBy": {
      "name": "SingleClassPerFile",
      "kind": 3,
      "href": "flutter_best_practices_lints/SingleClassPerFile-class.html"
    }
  },
  {
    "name": "createPlugin",
    "qualifiedName": "flutter_best_practices_lints.createPlugin",
    "href": "flutter_best_practices_lints/createPlugin.html",
    "kind": 8,
    "packageRank": 0,
    "desc": "This is the entrypoint of our custom linter",
    "enclosedBy": {
      "name": "flutter_best_practices_lints",
      "kind": 9,
      "href": "flutter_best_practices_lints"
    }
  }
]
